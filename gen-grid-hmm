#!/usr/bin/env python3

from grid_hmm import GridHMM
import argparse
import json


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Generates realizations from the GridHMM domain.')
    parser.add_argument('width', type=int, help='The width of the grid.')
    parser.add_argument('height', type=int, help='The height of the grid.')
    parser.add_argument('--p', type=float, default=0.5, help='The probability of observing the actual state.')
    parser.add_argument('--num_realizations', type=int, default=100, help='The number of samples to draw from the HMM.')
    parser.add_argument('--time', type=int, default=10, help='The number of states per realization.')
    parser.add_argument('--output_file', type=str, default='output.json', help='The file to write the HMM spec and samples to.')
    args = parser.parse_args()

    hmm = GridHMM(args.width, args.height, args.p)

    data = {
        'params': {
            'width': hmm.width,
            'height': hmm.height,
            'p': hmm.p
        },
        'realizations': [hmm.sample(args.time) for _ in range(args.num_realizations)]
    }

    with open(args.output_file, 'w') as f:
        f.write(json.dumps(data, indent=2))

    print("Written to '{}'.".format(args.output_file))
